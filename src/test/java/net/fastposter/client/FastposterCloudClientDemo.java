package net.fastposter.client;import lombok.SneakyThrows;import okhttp3.OkHttpClient;import okhttp3.tls.HandshakeCertificates;import org.apache.commons.io.FileUtils;import java.io.File;import java.util.HashMap;import java.util.Map;public class FastposterCloudClientDemo {    @SneakyThrows    public static void main(String[] args) {        // 创建海报客户端对象        FastposterCloudClient client = FastposterCloudClient.builder()                .endpoint("https://cloud.prodapi.cn")//                .endpoint("http://tsh1:30021")                .appKey("demo")//                .okHttpClient(newOkHttpClient())                .appSecret("demo")                .debug(true)//                .trace(true)      // 跟踪模式                .build();        // 构造海报参数        Map<String, String> params = new HashMap<>();        // 暂未指定任何动态参数        params.put("day", "8");//        for (int i = 0; i < 100; i++) {//            // 获取下载地址//            byte[] p = client.buildPoster(100004, params, PosterType.png);//            byte[] p1 = client.buildPoster(100004, params, PosterType.jpeg);//        }        // 获取下载地址//        byte[] p = client.buildPoster(100004, params, PosterType.png);//        byte[] p1 = client.buildPoster(100004, params, PosterType.jpeg);//        byte[] p2 = client.buildPoster(100004, params, PosterType.webp);        byte[] p3 = client.buildPoster(100004, params, PosterType.b64);//        byte[] p4 = client.buildPoster(100004, params, PosterType.pdf);        // base64测试        String b64 = new String(p3);//        System.out.println(b64);        // 验证//        String data = "<img src=\"data:image/jpg;base64," + b64 + "\"/>";        String data = "<html><body><img style=\"width:200px;\" src=\"data:image/jpeg;base64," + b64 + "\"/></body></html>";        FileUtils.writeStringToFile(new File("b64.html"), data, "utf-8");        System.out.println("end");    }    /**     * 加载系统新任的证书     *     * @return     */    private static OkHttpClient newOkHttpClient() {        HandshakeCertificates certificates = new HandshakeCertificates.Builder()                .addPlatformTrustedCertificates()                .build();        OkHttpClient client = new OkHttpClient.Builder()                .sslSocketFactory(certificates.sslSocketFactory(), certificates.trustManager())                .build();        return client;    }}
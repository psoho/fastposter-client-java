package net.fastposter.client;import okhttp3.OkHttpClient;import okhttp3.tls.HandshakeCertificates;import java.util.HashMap;import java.util.Map;public class FastposterCloudClientDemo {    public static void main(String[] args) {        // 创建海报客户端对象        FastposterCloudClient client = FastposterCloudClient.builder()                .endpoint("https://cloud.prodapi.cn")                .endpoint("http://tsh1:30021")                .appKey("demo")//                .okHttpClient(newOkHttpClient())                .appSecret("demo")                .debug(true)                .build();        // 构造海报参数        Map<String, String> params = new HashMap<>();        // 暂未指定任何动态参数        params.put("day", "7");//        for (int i = 0; i < 100; i++) {//            // 获取下载地址//            byte[] p = client.buildPoster(100004, params, PosterType.png);//            byte[] p1 = client.buildPoster(100004, params, PosterType.jpeg);//        }        // 获取下载地址        byte[] p = client.buildPoster(100004, params, PosterType.png);        byte[] p1 = client.buildPoster(100004, params, PosterType.jpeg);        byte[] p2 = client.buildPoster(100004, params, PosterType.webp);        byte[] p3 = client.buildPoster(100004, params, PosterType.pdf);        System.out.println("end");    }    /**     * 加载系统新任的证书     *     * @return     */    private static OkHttpClient newOkHttpClient() {        HandshakeCertificates certificates = new HandshakeCertificates.Builder()                .addPlatformTrustedCertificates()                .build();        OkHttpClient client = new OkHttpClient.Builder()                .sslSocketFactory(certificates.sslSocketFactory(), certificates.trustManager())                .build();        return client;    }}
package com.example;import lombok.SneakyThrows;import net.fastposter.client.FastposterCloudClient;import java.util.HashMap;import java.util.Map;import java.util.concurrent.CountDownLatch;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;public class FastposterCloudDemo3 {    @SneakyThrows    public static void main(String[] args) {        // 创建海报客户端对象        FastposterCloudClient client = FastposterCloudClient.builder()                .appKey("0d59770e8903495e")                .appSecret("ff97be9109ae46ed9e094eff54dcf81c")                .debug(true)                .build();        // 准备海报参数        Map<String, Object> params = new HashMap<>();        params.put("name", "中文测试");        int max = 10000;        ExecutorService pool = Executors.newFixedThreadPool(8);        CountDownLatch countDownLatch = new CountDownLatch(max);        for (int i = 0; i < max; i++) {            pool.execute(() -> {                try {                    client.buildPoster("935da051f0fe4d03").params(params).build();                } finally {                    countDownLatch.countDown();                }            });        }        countDownLatch.await();        System.out.println("EDN");        pool.shutdown();    }}